{"version":3,"sources":["components/Navigation/Navigation.js","components/Home/Home.js","components/SearchBox/SearchBox.js","components/CityBox/City/City.js","components/CityBox/ClockShape/ClockShape.js","components/CityBox/CityBox.js","components/RightDisplay/images/worldMap.png","components/RightDisplay/Mapper/Mapper.js","components/RightDisplay/ComparisonBox/ComparisonBox.js","components/RightDisplay/RightDisplay.js","components/CityBox/Cities.js","components/RightDisplay/Mapper/locationsOfCities.js","containers/Clock.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Navigation","Navbar","collapseOnSelect","sticky","expand","bg","Toggle","Collapse","id","Nav","Link","href","className","Home","SearchBox","searchChange","type","placeholder","onChange","City","name","date","cityNameClick","dateAndTime","year","month","day","hour","minute","amOrPm","cityTime","format","cityTimeZone","toLocaleString","timeZone","toUpperCase","hour12","parseInt","length","substr","onMouseOver","e","target","style","fontWeight","onMouseLeave","onClick","ClockShape","hourHand","minuteHand","secondHand","cityHours","hours","cityMinutes","minutes","citySeconds","seconds","second","styleHour","transform","styleMinutes","styleSeconds","CityBox","city","Mapper","citiesOnMap","src","WorldMapImage","map","width","ComparisonBox","twoCities","resetClick","firstIsFaster","calculateTimeofCity","hourDiff","first","difference","hourDifference","RightDisplay","cityList","locationsOfCities","shape","coords","preFillColor","Clock","useState","searchField","setSerachField","cities","setCities","Date","setDate","setTwoCities","areas","setCitiesOnMap","useEffect","firstCity","secondCity","filter","filteredCities","concat","updateMap","interval","setInterval","clearInterval","filteredCity","toLowerCase","includes","event","value","original","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.91553e58.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <>\r\n      <Navbar collapseOnSelect sticky=\"top\" expand='sm' bg='style'>\r\n        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n        <Navbar.Collapse id='responsive-navbar-nav'>\r\n          <Nav>\r\n            <Nav.Link href='/'>\r\n              <div className='link-text'>\r\n                Home\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link href='/clock'>\r\n              <div className='link-text'>\r\n                Clock\r\n              </div>\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>  \r\n  );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className='head'>\r\n      <h2>Welcome to Dowoo's website</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './SearchBox.css';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className='flex-container'>\r\n      <input\r\n        className='searchBox'\r\n        type='search'\r\n        placeholder='Search a city'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport './City.css';\r\n\r\nconst City = ({ name, date, cityNameClick }) => {\r\n  let dateAndTime = {\r\n    year: '',\r\n    month: '',\r\n    day: '',\r\n    hour: '',\r\n    minute: '',\r\n    //second: '',\r\n    amOrPm: ''\r\n  };\r\n\r\n  const cityTime = (format, cityTimeZone) => {\r\n    let year = date.toLocaleString(format, { year: 'numeric', timeZone: cityTimeZone });\r\n    let month = date.toLocaleString(format, { month: 'short', timeZone: cityTimeZone }).toUpperCase();\r\n    let day = date.toLocaleString(format, { day: 'numeric', timeZone: cityTimeZone });\r\n    let hour = date.toLocaleString(format, { hour: 'numeric', hour12: false, timeZone: cityTimeZone });\r\n    let minute = date.toLocaleString(format, { minute: 'numeric', timeZone: cityTimeZone });\r\n    //let second = date.toLocaleString(format, { second: '2-digit', timeZone: cityTimeZone });\r\n\r\n    dateAndTime.year = year;\r\n    dateAndTime.month = month;\r\n    dateAndTime.day = day;\r\n\r\n    dateAndTime.hour = parseInt(hour, 10) > 12 ? `0${hour - 12}` : hour;\r\n    dateAndTime.hour = dateAndTime.hour.length === 3 ? dateAndTime.hour.substr(1) : dateAndTime.hour;\r\n\r\n    dateAndTime.amOrPm = parseInt(hour, 10) === 24 || hour < 12  ? 'AM' : 'PM';\r\n    \r\n    dateAndTime.minute = minute < 10 ? `0${minute}` : minute;\r\n    //dateAndTime.second = second < 10 ? `0${second}`: second;\r\n  }\r\n\r\n  switch (name)\r\n  {\r\n    case 'Athens':\r\n      cityTime('en-US', 'Europe/Athens');\r\n      break;      \r\n    case 'Istanbul':\r\n      cityTime('en-US', 'Europe/Istanbul');\r\n      break;      \r\n    case 'London':\r\n      cityTime('en-US', 'Europe/London');\r\n      break;\r\n    case 'Los Angeles':\r\n      cityTime('en-US', 'America/Los_Angeles');\r\n      break;\r\n    case 'Moscow':\r\n      cityTime('en-US', 'Europe/Moscow');\r\n      break;  \r\n    case 'New York':\r\n      cityTime('en-US', 'America/New_York');\r\n      break;\r\n    case 'Paris':\r\n      cityTime('en-US', 'Europe/Paris');\r\n      break;\r\n    case 'Seoul':\r\n      cityTime('en-US', 'Asia/Seoul');\r\n      break;\r\n    case 'Shanghai':\r\n      cityTime('en-US', 'Asia/Shanghai');\r\n      break;    \r\n    case 'Taipei':\r\n      cityTime('en-US', 'Asia/Taipei');\r\n      break;  \r\n    case 'Tokyo':\r\n      cityTime('en-US', 'Asia/Tokyo');\r\n      break;\r\n    case 'Toronto':\r\n      cityTime('en-US', 'America/Toronto');\r\n      break;\r\n    default:\r\n  }\r\n\r\n  const mouseOver = (e) => {\r\n    e.target.style.fontWeight = 400;\r\n  }\r\n\r\n  const mouseLeave = (e) => {\r\n    e.target.style.fontWeight = 300;\r\n  }\r\n\r\n  return (\r\n    <div className='outside-container'>\r\n      <div className='city-name'>\r\n        <div className='inside-container-name'>\r\n          <div></div>\r\n          <button className='city-name-button' \r\n                  onMouseOver={mouseOver} \r\n                  onMouseLeave={mouseLeave}\r\n                  onClick={cityNameClick}>\r\n            {name}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className='time'>\r\n        <div className='inside-container-time'>\r\n          <div className='hour'>{`${dateAndTime.hour}:`}</div>\r\n          <div className='minute'>{`${dateAndTime.minute}`}</div>\r\n          <div className='ampm'>{`${dateAndTime.amOrPm}`}</div>\r\n        </div>\r\n      </div>\r\n      <div className='date'>\r\n        {`${dateAndTime.month} ${dateAndTime.day}, ${dateAndTime.year}`}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default City;","import React from 'react';\r\nimport './ClockShape.css';\r\n\r\nconst ClockShape = ({name, date }) => {\r\n  let hourHand, minuteHand, secondHand;\r\n\r\n  const cityHours = (format, cityTimeZone) => {\r\n    let hours = date.toLocaleString(format, \r\n      { hour: '2-digit', hour12: false, timeZone: cityTimeZone });\r\n\r\n    return parseInt(hours);\r\n  }\r\n\r\n  const cityMinutes = (format, cityTimeZone) => {\r\n    let minutes = date.toLocaleString(format, \r\n      { minute: '2-digit', timeZone: cityTimeZone });\r\n\r\n    return parseInt(minutes);\r\n  }\r\n\r\n  const citySeconds = (format, cityTimeZone) => {\r\n    let seconds = date.toLocaleString(format, \r\n      { second: '2-digit', timeZone: cityTimeZone });\r\n\r\n    return parseInt(seconds);\r\n  }\r\n\r\n  switch (name)\r\n  {\r\n    case 'Athens':\r\n      hourHand = cityHours('en-US', 'Europe/Athens');\r\n      minuteHand = cityMinutes('en-US', 'Europe/Athens');\r\n      secondHand = citySeconds('en-US', 'Europe/Athens');\r\n      break;      \r\n    case 'Istanbul':\r\n      hourHand = cityHours('en-US', 'Europe/Istanbul');\r\n      minuteHand = cityMinutes('en-US', 'Europe/Istanbul');\r\n      secondHand = citySeconds('en-US', 'Europe/Istanbul');\r\n      break;      \r\n    case 'London':\r\n      hourHand = cityHours('en-US', 'Europe/London');\r\n      minuteHand = cityMinutes('en-US', 'Europe/London');\r\n      secondHand = citySeconds('en-US', 'Europe/London');\r\n      break;\r\n    case 'Los Angeles':\r\n      hourHand = cityHours('en-US', 'America/Los_Angeles');\r\n      minuteHand = cityMinutes('en-US', 'America/Los_Angeles');\r\n      secondHand = citySeconds('en-US', 'America/Los_Angeles');\r\n      break;\r\n    case 'Moscow':\r\n      hourHand = cityHours('en-US', 'Europe/Moscow');\r\n      minuteHand = cityMinutes('en-US', 'Europe/Moscow');\r\n      secondHand = citySeconds('en-US', 'Europe/Moscow');\r\n      break;  \r\n    case 'New York':\r\n      hourHand = cityHours('en-US', 'America/New_York');\r\n      minuteHand = cityMinutes('en-US', 'America/New_York');\r\n      secondHand = citySeconds('en-US', 'America/New_York');\r\n      break;\r\n    case 'Paris':\r\n      hourHand = cityHours('en-US', 'Europe/Paris');\r\n      minuteHand = cityMinutes('en-US', 'Europe/Paris');\r\n      secondHand = citySeconds('en-US', 'Europe/Paris');\r\n      break;\r\n    case 'Seoul':\r\n      hourHand = cityHours('en-US', 'Asia/Seoul');\r\n      minuteHand = cityMinutes('en-US', 'Asia/Seoul');\r\n      secondHand = citySeconds('en-US', 'Asia/Seoul');\r\n      break;\r\n    case 'Shanghai':\r\n      hourHand = cityHours('en-US', 'Asia/Shanghai');\r\n      minuteHand = cityMinutes('en-US', 'Asia/Shanghai');\r\n      secondHand = citySeconds('en-US', 'Asia/Shanghai');\r\n      break;    \r\n    case 'Taipei':\r\n      hourHand = cityHours('en-US', 'Asia/Taipei');\r\n      minuteHand = cityMinutes('en-US', 'Asia/Taipei');\r\n      secondHand = citySeconds('en-US', 'Asia/Taipei');\r\n      break;  \r\n    case 'Tokyo':\r\n      hourHand = cityHours('en-US', 'Asia/Tokyo');\r\n      minuteHand = cityMinutes('en-US', 'Asia/Tokyo');\r\n      secondHand = citySeconds('en-US', 'Asia/Tokyo');\r\n      break;\r\n    case 'Toronto':\r\n      hourHand = cityHours('en-US', 'America/Toronto');\r\n      minuteHand = cityMinutes('en-US', 'America/Toronto');\r\n      secondHand = citySeconds('en-US', 'America/Toronto');\r\n      break;\r\n    default:\r\n      hourHand = 0;\r\n      minuteHand = 0;\r\n      secondHand = 0;\r\n  }\r\n\r\n  hourHand *= 30;\r\n  minuteHand *= 6;\r\n  secondHand *= 6;\r\n\r\n  const styleHour = {\r\n    transform: `rotateZ(${hourHand + minuteHand / 12}deg)`\r\n  }\r\n\r\n  const styleMinutes = {\r\n    transform: `rotateZ(${minuteHand}deg)`\r\n  }\r\n\r\n  const styleSeconds = {\r\n    transform: `rotateZ(${secondHand}deg)`\r\n  }\r\n\r\n  return (\r\n    <div className='clock__container grid'>\r\n      <div className='clock__content grid'>\r\n        <div className='clock__circle'>\r\n          <span className='clock__twelve'></span>\r\n          <span className='clock__three'></span>\r\n          <span className='clock__six'></span>\r\n          <span className='clock__nine'></span>\r\n\r\n          <div className='clock__rounder'></div>\r\n          <div className='clock__hour' style={styleHour}></div>\r\n          <div className='clock__minutes' style={styleMinutes}></div>\r\n          <div className='clock__seconds' style={styleSeconds}></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClockShape;","import React from 'react';\r\nimport City from './City/City';\r\nimport ClockShape from './ClockShape/ClockShape';\r\n\r\nconst CityBox = ({ city, date, cityNameClick }) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <ClockShape name={city[0].name} date={date} />\r\n      </div>\r\n      <div>\r\n        <City name={city[0].name} date={date} cityNameClick={cityNameClick} />   \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CityBox;","export default __webpack_public_path__ + \"static/media/worldMap.1db5d311.png\";","import React from 'react';\r\nimport ImageMapper from 'react-img-mapper';\r\nimport WorldMapImage from '../images/worldMap.png';\r\nimport './Mapper.css';\r\n\r\nconst Mapper = ({ citiesOnMap }) => {\r\n  // const [coords, setCoords] = useState({ x: 0, y: 0 });\r\n\r\n  // const setMousePointerCoords = (evt) => {\r\n  //   setCoords({\r\n  //     x: evt.nativeEvent.offsetX,\r\n  //     y: evt.nativeEvent.offsetY  \r\n  //   });\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <div className='world-map'>\r\n        <ImageMapper \r\n          src={WorldMapImage} \r\n          map={citiesOnMap}\r\n          width={800}\r\n          //onImageMouseMove={setMousePointerCoords}\r\n        />\r\n      </div>\r\n      {/* <div>\r\n        {`X: ${coords.x}, Y: ${coords.y}`}\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mapper;","import React from 'react';\r\nimport './ComparisonBox.css';\r\n\r\nconst ComparisonBox = ({ twoCities, date, resetClick }) => {\r\n  let firstIsFaster = true;\r\n\r\n  const calculateTimeofCity = (city) => {\r\n    let dateAndTime = {\r\n      year: 0,\r\n      month: 0,\r\n      day: 0,\r\n      hour: 0,\r\n      minute: 0\r\n    };\r\n\r\n    const cityTime = (format, cityTimeZone) => {\r\n      let year = date.toLocaleString(format, { year: 'numeric', timeZone: cityTimeZone });\r\n      let month = date.toLocaleString(format, { month: 'numeric', timeZone: cityTimeZone }).toUpperCase();\r\n      let day = date.toLocaleString(format, { day: 'numeric', timeZone: cityTimeZone });\r\n      let hour = date.toLocaleString(format, { hour: 'numeric', hour12: false, timeZone: cityTimeZone });\r\n      //let minute = date.toLocaleString(format, { minute: 'numeric', timeZone: cityTimeZone });\r\n      //let second = date.toLocaleString(format, { second: '2-digit', timeZone: cityTimeZone });\r\n  \r\n      dateAndTime.year = parseInt(year, 10);\r\n      dateAndTime.month = parseInt(month, 10);\r\n      dateAndTime.day = parseInt(day, 10);\r\n      \r\n      dateAndTime.hour = parseInt(hour, 10);\r\n      //dateAndTime.minute = parseInt(minute, 10);\r\n      //dateAndTime.second = second < 10 ? `0${second}`: second;\r\n    }\r\n\r\n    switch (city)\r\n      {\r\n        case 'Athens':\r\n          cityTime('en-US', 'Europe/Athens');\r\n          break;      \r\n        case 'Istanbul':\r\n          cityTime('en-US', 'Europe/Istanbul');\r\n          break;      \r\n        case 'London':\r\n          cityTime('en-US', 'Europe/London');\r\n          break;\r\n        case 'Los Angeles':\r\n          cityTime('en-US', 'America/Los_Angeles');\r\n          break;\r\n        case 'Moscow':\r\n          cityTime('en-US', 'Europe/Moscow');\r\n          break;  \r\n        case 'New York':\r\n          cityTime('en-US', 'America/New_York');\r\n          break;\r\n        case 'Paris':\r\n          cityTime('en-US', 'Europe/Paris');\r\n          break;\r\n        case 'Seoul':\r\n          cityTime('en-US', 'Asia/Seoul');\r\n          break;\r\n        case 'Shanghai':\r\n          cityTime('en-US', 'Asia/Shanghai');\r\n          break;    \r\n        case 'Taipei':\r\n          cityTime('en-US', 'Asia/Taipei');\r\n          break;  \r\n        case 'Tokyo':\r\n          cityTime('en-US', 'Asia/Tokyo');\r\n          break;\r\n        case 'Toronto':\r\n          cityTime('en-US', 'America/Toronto');\r\n          break;\r\n        default:\r\n      }\r\n\r\n      return dateAndTime;\r\n  }\r\n\r\n  const hourDifference = (first, second) => {\r\n    let difference = 0;\r\n\r\n    if (first.hour === 24) {\r\n      first.hour = 0;\r\n    }\r\n    if (second.hour === 24) {\r\n      second.hour = 0;\r\n    }\r\n\r\n    if (first.day > second.day) {\r\n      difference = (first.hour + 24) - second.hour;\r\n    }\r\n    else if (first.day < second.day) {\r\n      firstIsFaster = false;\r\n      difference = (second.hour + 24) - first.hour;\r\n    }\r\n    else {\r\n      if (first.hour > second.hour) {\r\n        difference = first.hour - second.hour;\r\n      }\r\n      else {\r\n        firstIsFaster = false;\r\n        difference = second.hour - first.hour;\r\n      }\r\n    }\r\n\r\n    return difference;\r\n  } \r\n\r\n  const mouseOver = (e) => {\r\n    e.target.style.fontWeight = 500;\r\n  }\r\n\r\n  const mouseLeave = (e) => {\r\n    e.target.style.fontWeight = 300;\r\n  }\r\n\r\n  let timeOfFirstCity = calculateTimeofCity(twoCities[0]);\r\n  let timeOfSecondCity = calculateTimeofCity(twoCities[1]);\r\n  let hourDiff = hourDifference(timeOfFirstCity, timeOfSecondCity);\r\n\r\n  return (\r\n    <div>\r\n      <div className='time-difference-box'>\r\n        {\r\n          hourDiff === 0\r\n          ? (\r\n            twoCities[0] === twoCities[1]\r\n            ? <div>Please select two <i>different cities</i><br/>for comparison.</div>\r\n            : <div>No time difference <br/>between <i>{twoCities[0]}</i> and <i>{twoCities[1]}</i>.</div>\r\n          )\r\n          : (\r\n            firstIsFaster\r\n            ? <div>\r\n                <span className='first-city'>{twoCities[0]}</span>\r\n                &nbsp;is {hourDiff} hours ahead of&nbsp;\r\n                <span className='second-city'>{twoCities[1]}</span>.\r\n              </div>\r\n            : <div>\r\n                <span className='second-city'>{twoCities[1]}</span> \r\n                &nbsp;is {hourDiff} hours ahead of&nbsp;\r\n                <span className='first-city'>{twoCities[0]}</span>.\r\n              </div>\r\n          )\r\n        }\r\n      </div>\r\n      <br/>\r\n      <div className='reset-button-text'>\r\n        <button className='reset-button'\r\n                onMouseOver={mouseOver} \r\n                onMouseLeave={mouseLeave}\r\n                onClick={resetClick}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default ComparisonBox;","import React from 'react';\r\nimport Mapper from './Mapper/Mapper';\r\nimport ComparisonBox from './ComparisonBox/ComparisonBox';\r\nimport './RightDisplay.css';\r\n\r\nconst RightDisplay = ({ date, twoCities, citiesOnMap, resetClick }) => {\r\n\r\n  return (\r\n    <div className='right-display-grid'>\r\n      <div className='world-map'>\r\n        <Mapper citiesOnMap={citiesOnMap} />\r\n      </div>\r\n      <div className='selected-cities'>\r\n        {\r\n          twoCities.length === 1\r\n          ? <div><i>{twoCities[0]}</i> is located at a <span className='blue-text'>blue</span> dot.</div>\r\n          : twoCities.length === 2 && twoCities[0] !== twoCities[1]\r\n            ? <div><i>{twoCities[0]}</i> is located at a <span className='blue-text'>blue</span> dot.<br/>\r\n                   <i>{twoCities[1]}</i> is located at a <span className='red-text'>red</span> dot.</div>\r\n            : twoCities.length === 2 && twoCities[0] === twoCities[1]\r\n              ? <div><i>{twoCities[0]}</i> is located at a <span className='blue-text'>blue</span> dot.</div>\r\n              : ''\r\n        }\r\n      </div>  \r\n      <div className='text-box'>\r\n        {\r\n          twoCities.length === 2 ?\r\n            <ComparisonBox twoCities={twoCities} date={date} resetClick={resetClick} /> :\r\n          <div className='notice-text'>\r\n            Search two cities.<br/>\r\n            (Click the <b>city name</b> for time comparison)\r\n          </div>  \r\n        }\r\n      </div>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default RightDisplay;","export const cityList = [\r\n  {\r\n    id: '1',\r\n    name: 'Athens'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Istanbul'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'London'\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'Los Angeles'\r\n  },\r\n  {\r\n    id: '5',\r\n    name: 'Moscow'\r\n  },\r\n  {\r\n    id: '6',\r\n    name: 'New York'\r\n  },\r\n  {\r\n    id: '7',\r\n    name: 'Paris'\r\n  },\r\n  {\r\n    id: '8',\r\n    name: 'Seoul'\r\n  },\r\n  {\r\n    id: '9',\r\n    name: 'Shanghai'\r\n  },\r\n  {\r\n    id: '10',\r\n    name: 'Taipei'\r\n  },\r\n  {\r\n    id: '11',\r\n    name: 'Tokyo'\r\n  },\r\n  {\r\n    id: '12',\r\n    name: 'Toronto'\r\n  }\r\n];\r\n","export const locationsOfCities = [\r\n  { id: 'Athens', shape: 'circle', coords: [433, 166, 3], preFillColor: 'rgba(255, 0, 0, 1)' },\r\n  { id: 'Istanbul', shape: 'circle', coords: [441, 159, 3], preFillColor: 'rgba(255, 0, 0, 1)' },\r\n  { id: 'London', shape: 'circle', coords: [379, 126, 3], preFillColor: 'rgba(255, 0, 0, 1)' },\r\n  { id: 'Los Angeles', shape: 'circle', coords: [117, 180, 3], preFillColor: 'rgba(255, 0, 0, 1)' },\r\n  { id: 'Moscow', shape: 'circle', coords: [466, 118, 3], preFillColor: 'rgba(255, 0, 0, 1)' },\r\n  { id: 'New York', shape: 'circle', coords: [215, 160, 3], preFillColor: 'rgba(255, 0, 0, 1)' },\r\n  { id: 'Paris', shape: 'circle', coords: [385, 135, 3], preFillColor: 'rgba(255, 0, 0, 1)' },\r\n  { id: 'Seoul', shape: 'circle', coords: [661, 171, 3], preFillColor: 'rgba(255, 0, 0, 1)', },\r\n  { id: 'Shanghai', shape: 'circle', coords: [646, 188, 3], preFillColor: 'rgba(255, 0, 0, 1)' },\r\n  { id: 'Taipei', shape: 'circle', coords: [647, 207, 3], preFillColor: 'rgba(255, 0, 0, 1)' },\r\n  { id: 'Tokyo', shape: 'circle', coords: [689, 175, 3], preFillColor: 'rgba(255, 0, 0, 1)' },\r\n  { id: 'Toronto', shape: 'circle', coords: [182, 135, 3], preFillColor: 'rgba(255, 0, 0, 1)' }\r\n];","import React, { useState, useEffect } from 'react';\r\nimport SearchBox from '../components/SearchBox/SearchBox';\r\nimport CityBox from '../components/CityBox/CityBox';\r\nimport RightDisplay from '../components/RightDisplay/RightDisplay';\r\nimport { cityList } from '../components/CityBox/Cities';\r\nimport { locationsOfCities } from '../components/RightDisplay/Mapper/locationsOfCities';\r\nimport './Clock.css';\r\n\r\nconst Clock = () => {\r\n  const [searchField, setSerachField] = useState('');\r\n  const [cities, setCities] = useState([]);\r\n  const [date, setDate] = useState(new Date());\r\n  const [twoCities, setTwoCities] = useState([]);\r\n  const [citiesOnMap, setCitiesOnMap] = useState({\r\n    name: 'clickedCities',\r\n    areas: [\r\n      { id: '', shape: '', coords: [0, 0, 0] },\r\n      { id: '', shape: '', coords: [0, 0, 0] }\r\n    ]\r\n  });\r\n  \r\n  useEffect(() => {\r\n    setCities(cityList);\r\n\r\n    const updateMap = () => {\r\n      const firstCity = twoCities[0];\r\n      const secondCity = twoCities[1];\r\n      let first = locationsOfCities.filter(city => city.id === (firstCity));\r\n      let second = locationsOfCities.filter(city => city.id === (secondCity));\r\n      let filteredCities = first.concat(second);\r\n      \r\n      filteredCities[0].preFillColor = 'rgba(0, 0, 255, 1)'; // set first city's color to blue.\r\n      if (filteredCities.length === 2 &&\r\n          filteredCities[0].id !== filteredCities[1].id) {\r\n        filteredCities[1].preFillColor = 'rgba(255, 0, 0, 1)'; // set second city's color to red.\r\n      }\r\n      \r\n      setCitiesOnMap({ areas: filteredCities });\r\n    }\r\n\r\n    if (twoCities.length > 0) {\r\n      updateMap();\r\n    }\r\n\r\n    const interval = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  },[twoCities]);\r\n\r\n  const onSearchChange = (event) => {\r\n    setSerachField(event.target.value);\r\n  };\r\n\r\n  const filteredCity = cities.filter(city => {\r\n    if (searchField === '')\r\n    {\r\n      return true; // If nothing was typed in the search box, all the names of cities will show up below the search box.\r\n    }\r\n    return city.name.toLowerCase().includes(searchField.toLowerCase()); // else, show the names of the cities that only include the input characters typed in the search box.\r\n  });\r\n\r\n  const onCityNameClick = () => {\r\n    if (twoCities.length < 2) { // The twoCities array takes only up to two elements.\r\n      setTwoCities(original => [ ...original, filteredCity[0].name ]);\r\n    }  \r\n  };\r\n\r\n  const onResetClick = () => {\r\n    setCitiesOnMap({ areas: [] });\r\n    setTwoCities([]);\r\n  };\r\n\r\n  return (\r\n    <div className='outermost-container'>\r\n      <div className='search-box'>\r\n        <SearchBox searchChange={onSearchChange} />\r\n      </div>\r\n      <div className='city-box'>\r\n        {\r\n          filteredCity.length === 1 ?\r\n            <CityBox city={filteredCity} date={date} cityNameClick={onCityNameClick} /> :\r\n            <div className='flexbox'>\r\n              {filteredCity.map(city => <div key={city.id}>{city.name}</div>)}\r\n            </div>\r\n        }\r\n      </div >\r\n      <div className='right-display'>\r\n        <RightDisplay date={date} \r\n                      twoCities={twoCities} \r\n                      citiesOnMap={citiesOnMap} \r\n                      resetClick={onResetClick} />   \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Clock;","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Navigation from '../components/Navigation/Navigation';\nimport Home from '../components/Home/Home';\nimport Clock from './Clock';\n\nfunction App() {\n  return (\n    <>\n      <Navigation/>\n      <Switch>\n        <Route path='/clock' component={Clock}/>\n        <Route path='/' component={Home}/>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}